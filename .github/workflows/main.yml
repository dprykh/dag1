name: Post-Merge Script

on:
  push:
     branches:
      - main

jobs:
  post_merge:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Run Post-Merge Script
      run: |
        # Get the commit SHA of the last commit
        COMMIT_SHA=$(git rev-parse HEAD)
        echo $COMMIT_SHA

        # List the files in the last commit
        CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r $COMMIT_SHA)
        echo "files: ${CHANGED_FILES}"

        # CHANGED_FILES=$(git diff --name-only  HEAD^ HEAD)
        
        for p in $CHANGED_FILES
        do
        echo $p
        line_number=0
        if [[ "$p" == *"airflow_dags"* ]]
        then
        
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_DATE=$(git show --no-patch --format=%ci $COMMIT_ID)
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
        
          file_path="$p"
        
          while IFS= read -r line; do
            ((line_number++))
        
            # git id update
            if [[ "$line" == *"Last Git commit:"* ]]; then
              sed "${line_number}s/.*/Last Git commit: ${COMMIT_ID}/" $file_path > temp && mv temp $file_path
            fi
        
            # date update
            if [[ "$line" == *"Date of last commit:"* ]]; then
              sed "${line_number}s/.*/Date of last commit: ${COMMIT_DATE}/" $file_path > temp && mv temp $file_path
            fi
        
            # author update
            if [[ "$line" == *"Author of last commit:"* ]]; then
              sed "${line_number}s/.*/Author of last commit: ${COMMIT_AUTHOR}/" $file_path > temp && mv temp $file_path
            fi
          done < "$file_path"
        
          git add $p
          git commit -m "update documentation of ${p} with latest commit"
        fi
        done
        
        echo 'end of pre-merge hook'
        
        exit
