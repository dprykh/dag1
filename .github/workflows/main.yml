name: Update Documentation

on:
  push:
    paths:
      - '**/airflow_dags/**'

jobs:
  update_documentation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set Up Git
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"

    - name: Update Documentation
      run: |
        #!/bin/bash

        CHANGED_FILES=$(git diff --name-only HEAD~)
        
        for p in $CHANGED_FILES; do
          if [[ "$p" == *"airflow_dags"* ]]; then
            # Check if this is the initial commit
            if [ "$(git rev-list --count HEAD)" -eq 1 ]; then
              echo "Initial commit. Skipping update."
            else
              COMMIT_ID=$(git rev-parse HEAD^)
              COMMIT_DATE=$(git show --no-patch --format=%ci $COMMIT_ID)
              COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
        
              file_path="$p"
        
              while IFS= read -r line; do
                # git id update
                if [[ "$line" == *"Last Git commit:"* ]]; then
                  sed -i "s|Last Git commit:.*|Last Git commit: ${COMMIT_ID}|" "$file_path"
                fi
        
                # date update
                if [[ "$line" == *"Date of last commit:"* ]]; then
                  sed -i "s|Date of last commit:.*|Date of last commit: ${COMMIT_DATE}|" "$file_path"
                fi
        
                # author update
                if [[ "$line" == *"Author of last commit:"* ]]; then
                  sed -i "s|Author of last commit:.*|Author of last commit: ${COMMIT_AUTHOR}|" "$file_path"
                fi
              done < "$file_path"
        
              git add "$file_path"
              git commit -m "Update documentation of ${p} with latest commit"
            fi
          fi
        done
        
        echo 'End of script'




    - name: Push Changes
      if: success()
      run: git push origin HEAD:main
